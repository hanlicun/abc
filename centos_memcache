2.0 安装步骤

Centos及 Aliyun Linux 6系列版本

 

首先需要确认是否安装了gcc-c++等组件可以使用如没有请执行，

yum  install gcc+ gcc-c++

  

使用gcc –v查看版本是否为4.2（含）以上 【必须要安装GCC  GCC要大于等于4.2】

1)    rpm –qa | grep php 查看系统中是否有PHP环境，如果没有则安装之；如果有PHP则不要安装。建议使用php5.3【含】以上版本PHP5.2部分版本系列源代码会有zend_parse_parameters_none函数会出错，如需使用请参照php官方相关文档【包含源码编译的PHP】

yum install php-devel,php-common,php-cli  【如是源代码编译，请按照官方php编译升级的办法进行】

2) 安装SASL相关环境yum install cyrus-sasl-plain cyrus-sasl  cyrus-sasl-devel  cyrus-sasl-lib 【请先检测下是否有已安装了这些包，如有则不需要安装】

3) 安装源码包libmemcached 【推荐版本libmemcached-1.0.16】

请先检测下是否有已安装了这些包【包含源码包】如有则不需要安装

wget https://launchpad.net/libmemcached/1.0/1.0.16/+download/libmemcached-1.0.16.tar.gz 

tar zxvf libmemcached-1.0.16.tar.gz

cd libmemcached-1.0.16

./configure --prefix=/usr/local/webserver/libmemcached --enable-sasl

make

make install

cd ..

 

4) 安装源码包memcached 【推荐版本为memcached-2.1.0】

安装MEMCACHED前需要确认是否有zlib-devel包没有需要执行

yum install zlib-devel

请先检测下是否有已安装了memcached客户端包【包含源码包】如有则不需要安装，但需要重新编译增加-enable-memcached-sasl这个扩展

 

wget http://pecl.php.net/get/memcached-2.1.0.tgz

tar zxvf memcached-2.1.0.tgz

cd memcached-2.1.0

phpize（如果系统中有两套PHP环境，需绝对路径调用该命令/usr/bin/phpize，该路径为使用OCS的PHP环境路径）

./configure --with-libmemcached-dir=/usr/local/libmemcached --enable-memcached-sasl（注意这个参数）

make

make install

最后修改php.ini文件（locate找该文件，如果系统中有两套PHP环境，需找到使用OCS的PHP环境路径，对应修改之），增加extension=memcached.so

memcached.use_sasl = 1

依赖 ：

Memcached 2.1.0扩展必须使用libmemcached 1.0.x的库，低于1.0的库不再能够成功编译。编译 libmemcached时GCC要求在4.2以上。

使用该页面最后的测试代码测试下是否环境部署成功，请修改代码中相应的地址 端口 用户名及密码



安装Memcached步骤:

1.编译安装Libevent

Java代码  收藏代码

    cd ~  
    wget https://github.com/downloads/libevent/libevent/libevent-2.0.19-stable.tar.gz  
    tar -zxvf libevent-2.0.19-stable.tar.gz  
    cd libevent-2.0.19-stable  
    ./configure --prefix=/usr/local/libevent/  
    make  
    make install  
    ln -s /usr/local/libevent/lib/libevent-2.0.so.5  /lib64/libevent-2.0.so.5  



2.安装Memcache

Java代码  收藏代码

    cd ~  
    wget http://memcached.googlecode.com/files/memcached-1.4.13.tar.gz  
    tar -zxvf memcached-1.4.13.tar.gz  
    cd memcached-1.4.13  
    ./configure --prefix=/usr/local/memcached --with-libevent=/usr/local/libevent/  
    make  
    make install  



3.编写memcached服务启停脚本

Java代码  收藏代码

    # cd /etc/init.d  
    vi memcached  



脚本内容如下：

Java代码  收藏代码

    #!/bin/sh  
    #  
    # Startup script for the server of memcached  
    #http://blog.rekfan.com/?p=172  
    # processname: memcached  
    # pidfile: /usr/local/memcached/memcached.pid  
    # logfile: /usr/local/memcached/memcached_log.txt  
    # memcached_home: /etc/memcached  
    # chkconfig: 35 21 79  
    # description: Start and stop memcached Service  
      
    # Source function library  
    . /etc/rc.d/init.d/functions  
      
    RETVAL=0  
      
    prog="memcached"  
    basedir=/usr/local/memcached  
    cmd=${basedir}/bin/memcached  
    pidfile="$basedir/${prog}.pid"  
    #logfile="$basedir/memcached_log.txt"  
      
    # 设置memcached启动参数  
    ipaddr="192.168.1.101"          # 绑定侦听的IP地址  
    port="11211"                    # 服务端口  
    username="root"                 # 运行程序的用户身份  
    max_memory=64                   # default: 64M | 最大使用内存  
    max_simul_conn=1024             # default: 1024 | 最大同时连接数  
    #maxcon=51200  
    #growth_factor=1.3              # default: 1.25 | 块大小增长因子  
    #thread_num=6                   # default: 4  
    #verbose="-vv"                  # 查看详细启动信息  
    #bind_protocol=binary           # ascii, binary, or auto (default)  
      
    start() {  
    echo -n $"Starting service: $prog"  
    $cmd -d -m $max_memory -u $username -l $ipaddr -p $port -c $max_simul_conn -P $pidfile  
    RETVAL=$?  
    echo  
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog  
    }  
      
    stop() {  
    echo -n $"Stopping service: $prog  "  
    run_user=`whoami`  
    pidlist=`ps -ef | grep $run_user | grep memcached | grep -v grep | awk '{print($2)}'`  
    for pid in $pidlist  
    do  
    #           echo "pid=$pid"  
    kill -9 $pid  
    if [ $? -ne 0 ]; then  
    return 1  
    fi  
    done  
    RETVAL=$?  
    echo  
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog  
    }  
      
    # See how we were called.  
    case "$1" in  
    start)  
    start  
    ;;  
    stop)  
    stop  
    ;;  
    #reload)  
    #    reload  
    #    ;;  
    restart)  
    stop  
    start  
    ;;  
    #condrestart)  
    #    if [ -f /var/lock/subsys/$prog ]; then  
    #        stop  
    #        start  
    #    fi  
    #    ;;  
    status)  
    status memcached  
    ;;  
    *)  
    echo "Usage: $0 {start|stop|restart|status}"  
    exit 1  
    esac  
    exit $RETVAL  



4.设置脚本可被执行：

Java代码  收藏代码

    # chmod +x memcached  
    # chkconfig --add memcached  
    # chkconfig --level 35 memcached on  



5.设置防火墙

Java代码  收藏代码

    vi /etc/sysconfig/iptables  



将下面这行加入进去

Java代码  收藏代码

    -A RH-Firewall-l-INPUT -p tcp -m tcp --dport 11211 -j ACCEPT  



注：将memcached加入到防火墙允许访问规则中

Java代码  收藏代码

    service iptables restart  



注：防火墙重启

6.启动memcached

Java代码  收藏代码

    # service memcached start  



//启动的时候实际上是调用了下面的这个命令，以守护进程的方式来启动memcached

Java代码  收藏代码

    /usr/local/memcached/bin/memcached -d -m 64 -u root -l 192.168.1.101  
    -p 11211 -c 1024 -P /usr/local/memcached/memcached.pid  



7.查看memcached是否启动：

Java代码  收藏代码

    # ps -ef | grep memcached  



8.memcached命令参数解释







